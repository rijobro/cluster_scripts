#!/bin/bash

set -e # exit on error

columns="5,6,7,8,10"


#####################################################################################
# Usage
#####################################################################################
print_usage()
{
    echo "Convenience wrapper around `runai list`. Option to remove unnecessary columns."
    echo
    echo "Brief syntax:"
    echo "${0##*/} [OPTIONS(0)...] [ : [OPTIONS(N)...]]"
    echo
    echo "Full syntax:"
    echo "${0##*/} [-h|--help] [-c|--columns <val>]"
    echo
    echo "options without args:"
    echo "-h, --help                : Print this help."
    echo
    echo "options with args:"
    echo "-c, --columns <val>       : Column indices to omit e.g., \"3,5,6\". Default is"
    echo "                             ${columns}."
    echo
}


#####################################################################################
# Parse input arguments
#####################################################################################
while [[ $# -gt 0 ]]; do
    key="$1"
    shift
    if [ "$key" == "--" ]; then
        if [ "$#" -gt 0 ]; then
            cmd="$*"
        fi
        break
    fi
    case $key in
        -h|--help)
            print_usage
            exit 0
        ;;
        -c|--columns)
            columns="$1"
            shift
        ;;
        *)
            echo -e "\n\nUnknown argument: $key\n\n"
            print_usage
            exit 1
        ;;
    esac
done

# remove spaces from columns and add $ and = before and after each number
columns=$(echo "$columns" | sed 's/ //g')
cmd="{\$$(echo "$columns" | sed 's/,/=$/g')=\"\"}1"

# runai list, remove first line, and then remove requested columns. Convert back to tabular.
runai list | tail +2 | awk -F ' {2,}' -v OFS=';' "$cmd" | column -t -s ';'